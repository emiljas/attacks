<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <meta charset='utf-8' />
    <link rel="stylesheet" href="highlightjs/styles/default.css" />
    <script src="highlightjs/highlight.pack.js"></script>
  </head>
  <body>
    <main>
      <input id="dbResetBtn" type="button" value="Przywróć bazę do stanu początkowego" />

      <div id="addNote">
        <h1>Nowa notatka</h1><br />
        <div class="table">
          <div class="row">
            <div class="cell"><label for="addNoteTitle">tytuł: </label></div>
            <div class="cell"><input id="addNoteTitle" class="title" type="text" /></div>
          </div>
          <div class="row">
            <div class="cell"><label for="addNoteContent">treść: </label></div>
            <div class="cell"><input id="addNoteContent" class="content" type="text" /></div>
          </div>
        </div>
        <input class="submit" type="button" value="dodaj" />
      </div>

      <div id="notesList">
        <h1>Notatki Leny</h1>

        <label>
          szukaj:
          <input class="searcher" type="text" autofocus />
        </label>

        <div class="notes"></div>

        <p>
          podgląd zapytania sql:
          <pre><code class="sqlQuery" class="sql"></code></pre>
        </p>
      </div>
    </main>

    <script>
    var $ = document.querySelector.bind(document);

    var utils = (function() {
      function gettingJson(url) {
        return new Promise(function(resolve) {
          var req = new XMLHttpRequest();
          req.open("get", url, true);
          req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=utf-8')
          req.onreadystatechange = function () {
            if (req.readyState == 4) {
              if(req.status == 200)
                var ret= JSON.parse(req.responseText);
                resolve(ret);
            }
          };
          req.send(null)
        });
      }

      function posting(url, data) {
        var formData = new FormData();
        for(var property in data) {
          if(data.hasOwnProperty(property))
            formData.append(property, data[property]);
        }

        return new Promise(function(resolve) {
          var req = new XMLHttpRequest();
          req.open("post", url, true);

          req.onreadystatechange = function () {
            if (req.readyState == 4) {
              if(req.status == 200)
                resolve();
            }
          };
          req.send(formData);
        });
      }

      return {
        gettingJson: gettingJson,
        posting: posting
      };
    })();

    (function() {
      var dbResetBtn = $("#dbResetBtn");

      dbResetBtn.addEventListener("click", function() {
        utils.gettingJson("/resetDb")
        .then(function() {
          console.log("db");
        });
      }, false);
    })();

    var notesList = (function() {
      var noteTitleInput = $("#notesList .searcher")
      var notesDiv = $("#notesList .notes");
      var sqlQueryCode = $("#notesList .sqlQuery");

      noteTitleInput.addEventListener("input", function(e) {
        var input = e.target.value;
        filterNotes(input);
      });

      function filterNotes(input) {
        var url = "/test?input=" + encodeURIComponent(input);
        utils.gettingJson(url)
        .then(function(ret) {
          renderNotes(ret.notes);
          renderSqlQuery(ret.sqlQuery);
        });
      }

      function renderSqlQuery(query) {
        sqlQueryCode.textContent = query;
        hljs.highlightBlock(sqlQueryCode);
      }

      function renderNotes(notes) {
        notesDiv.innerHTML = "";
        notes.forEach(function(note) {
          renderNote(note);
        });
      }

      function renderNote(note) {
        var noteDiv = document.createElement("div");
        noteDiv.style.backgroundColor = "#" + note.colorRGB;
        noteDiv.className = "note";

        var titleP = document.createElement("p");
        titleP.className = "title";
        titleP.innerHTML = note.title;

        var contentP = document.createElement("p");
        contentP.className = "content";
        contentP.innerHTML = note.content;

        noteDiv.appendChild(titleP);
        noteDiv.appendChild(contentP);

        notesDiv.appendChild(noteDiv);
      }

      filterNotes("");
    })();

    (function() {
      var submitBtn = $("#addNote .submit");
      var titleInput = $("#addNote .title");
      var contentInput = $("#addNote .content");

      submitBtn.addEventListener("click", function() {
        console.log(titleInput.value);
        addNote(titleInput.value, contentInput.value);
      }, false);

      function addNote(title, content) {
        utils.posting("/addNote", {
          title: title,
          content: content
        })
        .then(function() {
          console.log("works");
        });
      }
    })();
    </script>
  </body>
</html>
